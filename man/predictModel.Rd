% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictModel.R
\name{predictModel}
\alias{predictModel}
\title{Predict model on server site}
\usage{
predictModel(
  connections,
  mod,
  pred_name,
  dat_name = "D",
  predict_fun = "predict(mod, newdata = D)",
  repush = FALSE,
  check_serialization = TRUE,
  package = NULL,
  just_return_call = FALSE
)
}
\arguments{
\item{connections}{(\code{DSI::connection}) Connection to an OPAL server.}

\item{mod}{(\code{arbitrary}) R object containing a model which is used for predictions on the server.}

\item{pred_name}{(\code{character(1L)}) Name of the object predictions should be assigned to.}

\item{dat_name}{(\code{character(1L)}) Name of the data object on the server (default is \code{"D"}.}

\item{predict_fun}{(\code{character(1L)}) The prediction function call as string. As placeholder
use 'mod' for the model and 'D' for the data, e.g. \code{predict(mod, newdata = D)}. This
gives the possibility to call arbitrary predict function like
\verb{predict(mod, newdata = D, type = \\"response\\", family = binomial())' for a GLM. The default is }predict(mod, newdata = D)`.}

\item{repush}{(\code{logical(1L)}) Logical value indicating if the model should again pushed to the server
(default is \code{TRUE}).}

\item{check_serialization}{(\code{logical(1L)}) Check if the serialized model can be deserialized locally
(default is \code{TRUE}).}

\item{package}{(\code{character(1L)}) Package required for model predictions (default is \code{NULL}).}

\item{just_return_call}{(\code{logical(1L)}) Just return the call and not execute on server (mainly for testing purposes,
default is \code{FALSE}).}
}
\value{
The prediction object returned from \code{DSI::datashield.assign}
}
\description{
This function enables to make predictions on the server for any
model. Requirement is that it can be serialized and deserialized without loosing
model components. Therefore, use \code{check_serialization = TRUE}.
}
\author{
Daniel S.
}
