% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pushObject.R
\name{pushObject}
\alias{pushObject}
\title{Push object to DataSHIELD server}
\usage{
pushObject(
  connections,
  obj,
  sep = "-",
  check_serialization = TRUE,
  package = NULL,
  install_if_not_available = TRUE,
  just_return_call = FALSE
)
}
\arguments{
\item{connections}{(\code{DSI::connection}) Connection to an OPAL server.}

\item{obj}{(arbitrary R object) Object containing which should be pushed to the server.}

\item{sep}{(\code{character(1L)}) Separator used to collapse the binary elements (default is \code{-}).}

\item{check_serialization}{(\code{logical(1L)}) Check if the serialized model can be deserialized
locally (default is \code{TRUE}).}

\item{package}{(\code{character(1L)}) Package required for model predictions (default is \code{NULL}).}

\item{install_if_not_available}{(\code{logical(1L)}) Install package if it is not installed (default is \code{TRUE}).}

\item{just_return_call}{(\code{logical(1L)}) Just return the call and not execute on server (mainly for testing purposes,
default is \code{FALSE}).}
}
\description{
This function pushes a serialized object and assigns a server
variable to it.
}
\examples{
# Just for local testing:
cl = pushObject("Dummy", iris, just_return_call = TRUE)
all.equal(iris, eval(parse(text = cl)))
}
\author{
Daniel S.
}
